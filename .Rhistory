View(metadata)
# remove unecessary metadata
metadata <- metadata[-c(3, 4), ]
# load library sheets
library_key <- readData(parent.dir = "./data/",
file.name = "v3_YehLab_compound_library_synergy_screen_metadata",
sheet.name = "LibraryKey",
col.names = TRUE)
library_key_2016 <- readData(parent.dir = "./data/",
file.name = "v3_YehLab_compound_library_synergy_screen_metadata",
sheet.name = "LibraryKey2016",
col.names = TRUE)
# reformat library datasets
library_drugs <- unique(library_key$Compound)
# reformat library datasets
library_drugs <- unique(library_key$Compound)
# create librarykey dataframe w/ compound, plate, row/col, & dose
compound_list <- list()
for (drug in seq(library_drugs)) {
# make the generalizable later
plates <- c(as.numeric(strsplit(library_key[drug, ]$Plate1, ",")[[1]]),
as.numeric(strsplit(library_key[drug, ]$Plate2, ",")[[1]]),
as.numeric(strsplit(library_key[drug, ]$Plate3, ",")[[1]]),
as.numeric(strsplit(library_key[drug, ]$Plate4, ",")[[1]]),
as.numeric(strsplit(library_key[drug, ]$Plate5, ",")[[1]]),
as.numeric(strsplit(library_key[drug, ]$Plate6, ",")[[1]]))
doses <- c(rep(library_key$`Dose1.(10uM)`[drug], length(strsplit(library_key$Plate1[1], ",")[[1]])),
rep(library_key$`Dose2.(3uM)`[drug], length(strsplit(library_key$Plate1[2], ",")[[1]])),
rep(library_key$`Dose3(1uM)`[drug], length(strsplit(library_key$Plate1[3], ",")[[1]])),
rep(library_key$`Dose4.(300.nM)`[drug], length(strsplit(library_key$Plate1[4], ",")[[1]])),
rep(library_key$`Dose5(100nM)`[drug], length(strsplit(library_key$Plate1[5], ",")[[1]])),
rep(library_key$`Dose6(10nM)`[drug], length(strsplit(library_key$Plate1[6], ",")[[1]])))
rows <- rep(library_key$Row[drug], length(doses))
columns <- c(rep(library_key$Column1[drug], length(strsplit(library_key$Plate1[1], ",")[[1]])),
rep(library_key$Column2[drug], length(strsplit(library_key$Plate1[2], ",")[[1]])),
rep(library_key$Column3[drug], length(strsplit(library_key$Plate1[3], ",")[[1]])),
rep(library_key$Column4[drug], length(strsplit(library_key$Plate1[4], ",")[[1]])),
rep(library_key$Column5[drug], length(strsplit(library_key$Plate1[5], ",")[[1]])),
rep(library_key$Column6[drug], length(strsplit(library_key$Plate1[6], ",")[[1]])))
compound <- rep(library_key$Compound[drug], length(doses))
temp <- data.frame(Compound = compound,
Plate = plates,
Does = doses,
Row = rows,
Column = columns,
stringsAsFactors = FALSE)
compound_list[[drug]] <- temp
}
# now coerce to a dataframe
compound_df_librarykey <- rbindlist(compound_list)
library(data.table)
# now coerce to a dataframe
compound_df_librarykey <- rbindlist(compound_list)
View(compound_df_librarykey)
# create librarykey dataframe w/ compound, plate, row/col, & dose
compound_list <- list()
for (drug in seq(library_drugs)) {
# make the generalizable later
plates <- c(as.numeric(strsplit(library_key[drug, ]$Plate1, ",")[[1]]),
as.numeric(strsplit(library_key[drug, ]$Plate2, ",")[[1]]),
as.numeric(strsplit(library_key[drug, ]$Plate3, ",")[[1]]),
as.numeric(strsplit(library_key[drug, ]$Plate4, ",")[[1]]),
as.numeric(strsplit(library_key[drug, ]$Plate5, ",")[[1]]),
as.numeric(strsplit(library_key[drug, ]$Plate6, ",")[[1]]))
doses <- c(rep(library_key$`Dose1.(10uM)`[drug], length(strsplit(library_key$Plate1[1], ",")[[1]])),
rep(library_key$`Dose2.(3uM)`[drug], length(strsplit(library_key$Plate1[2], ",")[[1]])),
rep(library_key$`Dose3(1uM)`[drug], length(strsplit(library_key$Plate1[3], ",")[[1]])),
rep(library_key$`Dose4.(300.nM)`[drug], length(strsplit(library_key$Plate1[4], ",")[[1]])),
rep(library_key$`Dose5(100nM)`[drug], length(strsplit(library_key$Plate1[5], ",")[[1]])),
rep(library_key$`Dose6(10nM)`[drug], length(strsplit(library_key$Plate1[6], ",")[[1]])))
rows <- rep(library_key$Row[drug], length(doses))
columns <- c(rep(library_key$Column1[drug], length(strsplit(library_key$Plate1[1], ",")[[1]])),
rep(library_key$Column2[drug], length(strsplit(library_key$Plate1[2], ",")[[1]])),
rep(library_key$Column3[drug], length(strsplit(library_key$Plate1[3], ",")[[1]])),
rep(library_key$Column4[drug], length(strsplit(library_key$Plate1[4], ",")[[1]])),
rep(library_key$Column5[drug], length(strsplit(library_key$Plate1[5], ",")[[1]])),
rep(library_key$Column6[drug], length(strsplit(library_key$Plate1[6], ",")[[1]])))
compound <- rep(library_key$Compound[drug], length(doses))
temp <- data.frame(Compound = compound,
Plate = plates,
Dose = doses,
Row = rows,
Column = columns,
stringsAsFactors = FALSE)
compound_list[[drug]] <- temp
}
# now coerce to a dataframe
compound_df_librarykey <- rbindlist(compound_list)
View(compound_df_librarykey)
View(library_key)
metadata <- readData(parent.dir = "./data/",
file.name = "v3_YehLab_compound_library_synergy_screen_metadata",
col.names = TRUE)
# remove unecessary metadata
metadata <- metadata[-c(3, 4, 6), ]
336*24 - 21*16 - 21*3
336*24 - 21*16*2
# reformat library datasets
library_drugs <- unique(library_key$Compound)
metadata <- readData(parent.dir = "./data/",
file.name = "v3_YehLab_compound_library_synergy_screen_metadata",
col.names = TRUE)
readData <- function(parent.dir, file.name, sheet.name = 1, col.names = TRUE) {
filepath <- sprintf("%s%s.xlsx",
parent.dir,
file.name)
sprintf("Reading file: %s", file.name)
df <- read.xlsx(filepath,
sheet = sheet.name,
colNames = col.names)
return(df)
}
metadata <- readData(parent.dir = "./data/",
file.name = "v3_YehLab_compound_library_synergy_screen_metadata",
col.names = TRUE)
# remove unecessary metadata
metadata <- metadata[-c(3, 4, 6), ]
# load library sheets
library_key <- readData(parent.dir = "./data/",
file.name = "v3_YehLab_compound_library_synergy_screen_metadata",
sheet.name = "LibraryKey",
col.names = TRUE)
library_key_2016 <- readData(parent.dir = "./data/",
file.name = "v3_YehLab_compound_library_synergy_screen_metadata",
sheet.name = "LibraryKey2016",
col.names = TRUE)
for (drug in seq(library_drugs)) {
# 7392 wells per `xlsx` file --> 336*24 - 216*21 = 7293
plates <- c(as.numeric(strsplit(library_key_2016[drug, ]$Plate1, ",")[[1]]),
as.numeric(strsplit(library_key_2016[drug, ]$Plate2, ",")[[1]]),
as.numeric(strsplit(library_key_2016[drug, ]$Plate3, ",")[[1]]),
as.numeric(strsplit(library_key_2016[drug, ]$Plate4, ",")[[1]]),
as.numeric(strsplit(library_key_2016[drug, ]$Plate5, ",")[[1]]),
as.numeric(strsplit(library_key_2016[drug, ]$Plate6, ",")[[1]]))
doses <- c(rep(library_key_2016$Dose1[drug], length(strsplit(library_key_2016$Plate1[1], ",")[[1]])),
rep(library_key_2016$Dose2[drug], length(strsplit(library_key_2016$Plate1[2], ",")[[1]])),
rep(library_key_2016$Dose3[drug], length(strsplit(library_key_2016$Plate1[3], ",")[[1]])),
rep(library_key_2016$Dose4[drug], length(strsplit(library_key_2016$Plate1[4], ",")[[1]])),
rep(library_key_2016$Dose5[drug], length(strsplit(library_key_2016$Plate1[5], ",")[[1]])),
rep(library_key_2016$Dose6[drug], length(strsplit(library_key_2016$Plate1[6], ",")[[1]])))
columns <- c(rep(library_key_2016$Column1[drug], length(strsplit(library_key_2016$Plate1[1], ",")[[1]])),
rep(library_key_2016$Column2[drug], length(strsplit(library_key_2016$Plate1[2], ",")[[1]])),
rep(library_key_2016$Column3[drug], length(strsplit(library_key_2016$Plate1[3], ",")[[1]])),
rep(library_key_2016$Column4[drug], length(strsplit(library_key_2016$Plate1[4], ",")[[1]])),
rep(library_key_2016$Column5[drug], length(strsplit(library_key_2016$Plate1[5], ",")[[1]])),
rep(library_key_2016$Column6[drug], length(strsplit(library_key_2016$Plate1[6], ",")[[1]])))
compound <- rep(library_key_2016$Compound[drug], length(doses))
rows <- rep(library_key$Row[drug], length(doses))
temp <- data.frame(Compound = compound,
Plate = plates,
Dose = doses,
Row = rows,
Column = columns,
stringsAsFactors = FALSE)
compound_list[[drug]] <- temp
}
# reformat library datasets
library_drugs <- unique(library_key$Compound)
# create librarykey dataframe w/ compound, plate, row/col, & dose
compound_list <- list()
for (drug in seq(library_drugs)) {
# 7392 wells per `xlsx` file --> 336*24 - 216*21 = 7293
plates <- c(as.numeric(strsplit(library_key_2016[drug, ]$Plate1, ",")[[1]]),
as.numeric(strsplit(library_key_2016[drug, ]$Plate2, ",")[[1]]),
as.numeric(strsplit(library_key_2016[drug, ]$Plate3, ",")[[1]]),
as.numeric(strsplit(library_key_2016[drug, ]$Plate4, ",")[[1]]),
as.numeric(strsplit(library_key_2016[drug, ]$Plate5, ",")[[1]]),
as.numeric(strsplit(library_key_2016[drug, ]$Plate6, ",")[[1]]))
doses <- c(rep(library_key_2016$Dose1[drug], length(strsplit(library_key_2016$Plate1[1], ",")[[1]])),
rep(library_key_2016$Dose2[drug], length(strsplit(library_key_2016$Plate1[2], ",")[[1]])),
rep(library_key_2016$Dose3[drug], length(strsplit(library_key_2016$Plate1[3], ",")[[1]])),
rep(library_key_2016$Dose4[drug], length(strsplit(library_key_2016$Plate1[4], ",")[[1]])),
rep(library_key_2016$Dose5[drug], length(strsplit(library_key_2016$Plate1[5], ",")[[1]])),
rep(library_key_2016$Dose6[drug], length(strsplit(library_key_2016$Plate1[6], ",")[[1]])))
columns <- c(rep(library_key_2016$Column1[drug], length(strsplit(library_key_2016$Plate1[1], ",")[[1]])),
rep(library_key_2016$Column2[drug], length(strsplit(library_key_2016$Plate1[2], ",")[[1]])),
rep(library_key_2016$Column3[drug], length(strsplit(library_key_2016$Plate1[3], ",")[[1]])),
rep(library_key_2016$Column4[drug], length(strsplit(library_key_2016$Plate1[4], ",")[[1]])),
rep(library_key_2016$Column5[drug], length(strsplit(library_key_2016$Plate1[5], ",")[[1]])),
rep(library_key_2016$Column6[drug], length(strsplit(library_key_2016$Plate1[6], ",")[[1]])))
compound <- rep(library_key_2016$Compound[drug], length(doses))
rows <- rep(library_key$Row[drug], length(doses))
temp <- data.frame(Compound = compound,
Plate = plates,
Dose = doses,
Row = rows,
Column = columns,
stringsAsFactors = FALSE)
compound_list[[drug]] <- temp
}
# now coerce to a dataframe
compound_df_librarykey <- rbindlist(compound_list)
# repeat the previous operation for librarykey2016
library_drugs <- unique(library_key_2016$Compound)
compound_list <- list()
for (drug in seq(library_drugs)) {
# make this generalizable later
plates <- c(as.numeric(strsplit(library_key_2016[drug, ]$Plate1, ",")[[1]]),
as.numeric(strsplit(library_key_2016[drug, ]$Plate2, ",")[[1]]),
as.numeric(strsplit(library_key_2016[drug, ]$Plate3, ",")[[1]]),
as.numeric(strsplit(library_key_2016[drug, ]$Plate4, ",")[[1]]),
as.numeric(strsplit(library_key_2016[drug, ]$Plate5, ",")[[1]]),
as.numeric(strsplit(library_key_2016[drug, ]$Plate6, ",")[[1]]))
doses <- c(rep(library_key_2016$Dose1[drug], length(strsplit(library_key_2016$Plate1[1], ",")[[1]])),
rep(library_key_2016$Dose2[drug], length(strsplit(library_key_2016$Plate1[2], ",")[[1]])),
rep(library_key_2016$Dose3[drug], length(strsplit(library_key_2016$Plate1[3], ",")[[1]])),
rep(library_key_2016$Dose4[drug], length(strsplit(library_key_2016$Plate1[4], ",")[[1]])),
rep(library_key_2016$Dose5[drug], length(strsplit(library_key_2016$Plate1[5], ",")[[1]])),
rep(library_key_2016$Dose6[drug], length(strsplit(library_key_2016$Plate1[6], ",")[[1]])))
columns <- c(rep(library_key_2016$Column1[drug], length(strsplit(library_key_2016$Plate1[1], ",")[[1]])),
rep(library_key_2016$Column2[drug], length(strsplit(library_key_2016$Plate1[2], ",")[[1]])),
rep(library_key_2016$Column3[drug], length(strsplit(library_key_2016$Plate1[3], ",")[[1]])),
rep(library_key_2016$Column4[drug], length(strsplit(library_key_2016$Plate1[4], ",")[[1]])),
rep(library_key_2016$Column5[drug], length(strsplit(library_key_2016$Plate1[5], ",")[[1]])),
rep(library_key_2016$Column6[drug], length(strsplit(library_key_2016$Plate1[6], ",")[[1]])))
compound <- rep(library_key_2016$Compound[drug], length(doses))
rows <- rep(library_key$Row[drug], length(doses))
temp <- data.frame(Compound = compound,
Plate = plates,
Dose = doses,
Row = rows,
Column = columns,
stringsAsFactors = FALSE)
compound_list[[drug]] <- temp
}
# coerce to dataframe
compound_df_librarykey2016 <- rbindlist(compound_list)
View(compound_df_librarykey)
# finally, create a long version of the metadata dataframe
metadata_list <- list()
for (drug in seq(nrow(metadata))) {
# again, generalize this later
plates <- c(as.numeric(strsplit(metadata$A1PlateRange0[drug], ",")[[1]]),
as.numeric(strsplit(metadata$A1PlateRange1[drug], ",")[[1]]),
as.numeric(strsplit(metadata$A1PlateRange2[drug], ",")[[1]]),
as.numeric(strsplit(metadata$A1PlateRange3[drug], ",")[[1]]),
as.numeric(strsplit(metadata$A2PlateRange0[drug], ",")[[1]]),
as.numeric(strsplit(metadata$A2PlateRange1[drug], ",")[[1]]),
as.numeric(strsplit(metadata$A2PlateRange2[drug], ",")[[1]]),
as.numeric(strsplit(metadata$A2PlateRange3[drug], ",")[[1]]))
doses <- c(rep(metadata$A1Dose0[drug], length(strsplit(metadata$A1PlateRange0[drug], ",")[[1]])),
rep(metadata$A1Dose1[drug], length(strsplit(metadata$A1PlateRange1[drug], ",")[[1]])),
rep(metadata$A1Dose2[drug], length(strsplit(metadata$A1PlateRange2[drug], ",")[[1]])),
rep(metadata$A1Dose3[drug], length(strsplit(metadata$A1PlateRange3[drug], ",")[[1]])),
rep(metadata$A2Dose0[drug], length(strsplit(metadata$A2PlateRange0[drug], ",")[[1]])),
rep(metadata$A2Dose1[drug], length(strsplit(metadata$A2PlateRange1[drug], ",")[[1]])),
rep(metadata$A2Dose2[drug], length(strsplit(metadata$A2PlateRange2[drug], ",")[[1]])),
rep(metadata$A2Dose3[drug], length(strsplit(metadata$A2PlateRange3[drug], ",")[[1]])))
anchors <- c(rep(metadata$Anchor1[drug], length(doses) / 2),
rep(metadata$Anchor2[drug], length(doses) / 2))
filenames <- rep(metadata$Filename[drug], length(doses))
lib_sheets <- rep(metadata$LibrarySheet[drug], length(doses))
samp_info <- rep(metadata$SampleInfo[drug], length(doses))
temp <- data.frame(Filename = filenames,
SampleInfo = samp_info,
LibrarySheet = lib_sheets,
Anchor = anchors,
Dose = doses,
Plate = plates,
stringsAsFactors = FALSE)
metadata_list[[drug]] <- temp
}
# coerce to dataframe
metadata_df <- rbindlist(metadata_list)
View(metadata_df)
length(seq(nrow(metadata)))
View(metadata)
402/17
402/21
View(metadata_df)
rm(anchors)
402/16
anchor=1
# again, generalize this later
plates <- c(as.numeric(strsplit(metadata$A1PlateRange0[anchor], ",")[[1]]),
as.numeric(strsplit(metadata$A1PlateRange1[anchor], ",")[[1]]),
as.numeric(strsplit(metadata$A1PlateRange2[anchor], ",")[[1]]),
as.numeric(strsplit(metadata$A1PlateRange3[anchor], ",")[[1]]),
as.numeric(strsplit(metadata$A2PlateRange0[anchor], ",")[[1]]),
as.numeric(strsplit(metadata$A2PlateRange1[anchor], ",")[[1]]),
as.numeric(strsplit(metadata$A2PlateRange2[anchor], ",")[[1]]),
as.numeric(strsplit(metadata$A2PlateRange3[anchor], ",")[[1]]))
plates
length(plates)
# plates 1:3 always have dose=0 for anchor 1 & 2
plates <- c(as.numeric(strsplit(metadata$A1PlateRange0[anchor], ",")[[1]]),
as.numeric(strsplit(metadata$A1PlateRange1[anchor], ",")[[1]]),
as.numeric(strsplit(metadata$A1PlateRange2[anchor], ",")[[1]]),
as.numeric(strsplit(metadata$A1PlateRange3[anchor], ",")[[1]]),
as.numeric(strsplit(metadata$A2PlateRange1[anchor], ",")[[1]]),
as.numeric(strsplit(metadata$A2PlateRange2[anchor], ",")[[1]]),
as.numeric(strsplit(metadata$A2PlateRange3[anchor], ",")[[1]]))
doses <- c(rep(metadata$A1Dose0[anchor], length(strsplit(metadata$A1PlateRange0[anchor], ",")[[1]])),
rep(metadata$A1Dose1[anchor], length(strsplit(metadata$A1PlateRange1[anchor], ",")[[1]])),
rep(metadata$A1Dose2[anchor], length(strsplit(metadata$A1PlateRange2[anchor], ",")[[1]])),
rep(metadata$A1Dose3[anchor], length(strsplit(metadata$A1PlateRange3[achor], ",")[[1]])),
rep(metadata$A2Dose1[anchor], length(strsplit(metadata$A2PlateRange1[achor], ",")[[1]])),
rep(metadata$A2Dose2[anchor], length(strsplit(metadata$A2PlateRange2[anchor], ",")[[1]])),
rep(metadata$A2Dose3[anchor], length(strsplit(metadata$A2PlateRange3[anchor], ",")[[1]])))
doses <- c(rep(metadata$A1Dose0[anchor], length(strsplit(metadata$A1PlateRange0[anchor], ",")[[1]])),
rep(metadata$A1Dose1[anchor], length(strsplit(metadata$A1PlateRange1[anchor], ",")[[1]])),
rep(metadata$A1Dose2[anchor], length(strsplit(metadata$A1PlateRange2[anchor], ",")[[1]])),
rep(metadata$A1Dose3[anchor], length(strsplit(metadata$A1PlateRange3[achor], ",")[[1]])),
rep(metadata$A2Dose1[anchor], length(strsplit(metadata$A2PlateRange1[anchor], ",")[[1]])),
rep(metadata$A2Dose2[anchor], length(strsplit(metadata$A2PlateRange2[anchor], ",")[[1]])),
rep(metadata$A2Dose3[anchor], length(strsplit(metadata$A2PlateRange3[anchor], ",")[[1]])))
doses <- c(rep(metadata$A1Dose0[anchor], length(strsplit(metadata$A1PlateRange0[anchor], ",")[[1]])),
rep(metadata$A1Dose1[anchor], length(strsplit(metadata$A1PlateRange1[anchor], ",")[[1]])),
rep(metadata$A1Dose2[anchor], length(strsplit(metadata$A1PlateRange2[anchor], ",")[[1]])),
rep(metadata$A1Dose3[anchor], length(strsplit(metadata$A1PlateRange3[anchor], ",")[[1]])),
rep(metadata$A2Dose1[anchor], length(strsplit(metadata$A2PlateRange1[anchor], ",")[[1]])),
rep(metadata$A2Dose2[anchor], length(strsplit(metadata$A2PlateRange2[anchor], ",")[[1]])),
rep(metadata$A2Dose3[anchor], length(strsplit(metadata$A2PlateRange3[anchor], ",")[[1]])))
doses
length(doses) - 3
length(doses) - 3 / 2
(length(doses) - 3) / 2
anchors <- c(rep("Anchor doses = 0", 3),
rep(metadata$Anchor1[anchor], (length(doses) - 3) / 2),
rep(metadata$Anchor2[anchor], (length(doses) - 3) / 2))
View(anchors)
filenames <- rep(metadata$Filename[anchor], length(doses))
lib_sheets <- rep(metadata$LibrarySheet[anchor], length(doses))
?data.table
samp_info <- rep(metadata$SampleInfo[anchor], length(doses))
temp <- data.table(Filename = filenames,
SampleInfo = samp_info,
LibrarySheet = lib_sheets,
Anchor = anchors,
Dose = doses,
Plate = plates,
stringsAsFactors = FALSE)
View(temp)
85*18
402/18
# finally, create a long version of the metadata dataframe
metadata_list <- list()
for (anchor in seq(nrow(metadata))) {
# plates 1:3 always have dose=0 for anchor 1 & 2
plates <- c(as.numeric(strsplit(metadata$A1PlateRange0[anchor], ",")[[1]]),
as.numeric(strsplit(metadata$A1PlateRange1[anchor], ",")[[1]]),
as.numeric(strsplit(metadata$A1PlateRange2[anchor], ",")[[1]]),
as.numeric(strsplit(metadata$A1PlateRange3[anchor], ",")[[1]]),
as.numeric(strsplit(metadata$A2PlateRange1[anchor], ",")[[1]]),
as.numeric(strsplit(metadata$A2PlateRange2[anchor], ",")[[1]]),
as.numeric(strsplit(metadata$A2PlateRange3[anchor], ",")[[1]]))
doses <- c(rep(metadata$A1Dose0[anchor], length(strsplit(metadata$A1PlateRange0[anchor], ",")[[1]])),
rep(metadata$A1Dose1[anchor], length(strsplit(metadata$A1PlateRange1[anchor], ",")[[1]])),
rep(metadata$A1Dose2[anchor], length(strsplit(metadata$A1PlateRange2[anchor], ",")[[1]])),
rep(metadata$A1Dose3[anchor], length(strsplit(metadata$A1PlateRange3[anchor], ",")[[1]])),
rep(metadata$A2Dose1[anchor], length(strsplit(metadata$A2PlateRange1[anchor], ",")[[1]])),
rep(metadata$A2Dose2[anchor], length(strsplit(metadata$A2PlateRange2[anchor], ",")[[1]])),
rep(metadata$A2Dose3[anchor], length(strsplit(metadata$A2PlateRange3[anchor], ",")[[1]])))
anchors <- c(rep("Anchor doses = 0", 3),
rep(metadata$Anchor1[anchor], (length(doses) - 3) / 2),
rep(metadata$Anchor2[anchor], (length(doses) - 3) / 2))
filenames <- rep(metadata$Filename[anchor], length(doses))
lib_sheets <- rep(metadata$LibrarySheet[anchor], length(doses))
samp_info <- rep(metadata$SampleInfo[anchor], length(doses))
temp <- data.table(Filename = filenames,
SampleInfo = samp_info,
LibrarySheet = lib_sheets,
Anchor = anchors,
Dose = doses,
Plate = plates,
stringsAsFactors = FALSE)
metadata_list[[anchor]] <- temp
}
# coerce to dataframe
metadata_df <- rbindlist(metadata_list)
View(metadata_df)
351/16
351/21
351/24
351/18
length(which(metadata_df$Anchor == "Anchor doses = 0"))
351/51
351/17
for (i in seq(metadata_list)) {print(dim(metadata_list[[i]]))}
View(metadata_list[[6]])
# finally, create a long version of the metadata dataframe
metadata_list <- list()
for (anchor in seq(nrow(metadata))) {
# plates 1:3 always have dose=0 for anchor 1 & 2
plates <- c(as.numeric(strsplit(metadata$A1PlateRange0[anchor], ",")[[1]]),
as.numeric(strsplit(metadata$A1PlateRange1[anchor], ",")[[1]]),
as.numeric(strsplit(metadata$A1PlateRange2[anchor], ",")[[1]]),
as.numeric(strsplit(metadata$A1PlateRange3[anchor], ",")[[1]]),
as.numeric(strsplit(metadata$A2PlateRange1[anchor], ",")[[1]]),
as.numeric(strsplit(metadata$A2PlateRange2[anchor], ",")[[1]]),
as.numeric(strsplit(metadata$A2PlateRange3[anchor], ",")[[1]]))
doses <- c(rep(metadata$A1Dose0[anchor], length(strsplit(metadata$A1PlateRange0[anchor], ",")[[1]])),
rep(metadata$A1Dose1[anchor], length(strsplit(metadata$A1PlateRange1[anchor], ",")[[1]])),
rep(metadata$A1Dose2[anchor], length(strsplit(metadata$A1PlateRange2[anchor], ",")[[1]])),
rep(metadata$A1Dose3[anchor], length(strsplit(metadata$A1PlateRange3[anchor], ",")[[1]])),
rep(metadata$A2Dose1[anchor], length(strsplit(metadata$A2PlateRange1[anchor], ",")[[1]])),
rep(metadata$A2Dose2[anchor], length(strsplit(metadata$A2PlateRange2[anchor], ",")[[1]])),
rep(metadata$A2Dose3[anchor], length(strsplit(metadata$A2PlateRange3[anchor], ",")[[1]])))
anchors <- c(rep("Anchor doses = 0", 3),
rep(metadata$Anchor1[anchor], (length(doses) - 3) / 2),
rep(metadata$Anchor2[anchor], (length(doses) - 3) / 2))
filenames <- rep(metadata$Filename[anchor], length(doses))
lib_sheets <- rep(metadata$LibrarySheet[anchor], length(doses))
samp_info <- rep(metadata$SampleInfo[anchor], length(doses))
temp <- data.table(Filename = filenames,
SampleInfo = samp_info,
LibrarySheet = lib_sheets,
Anchor = anchors,
Dose = doses,
Plate = plates,
stringsAsFactors = FALSE)
metadata_list[[anchor]] <- temp
}
# coerce to dataframe
metadata_df <- rbindlist(metadata_list)
# save results and return as list
results <- list(metadata_df, compound_df_librarykey, compound_df_librarykey2016)
saveRDS(results, file = "./data/metadata_and_library_key.Rds")
return(results)
devtools::document()
devtools::document()
library(YehLabHTS)
library(openxlsx)
library(data.table)
set.seed(629)  # not explicitly needed, but just in case
# load metadata
temp <- reformatMetadata()
file.exists("./data/metadata_and_library_key.Rds")
metadata <- temp[[1]]
library_key <- temp[[2]]
library_key_2016 <- temp[[3]]
View(library_key)
View(metadata)
# load raw plate data into list
HTS_data <- list()
lib_sheets <- list()
for (file in seq(metadata$Filename)) {
# load raw HTS data
raw_data <- readData(parent.dir = "./data/rawdata/",
file.name = metadata$Filename[file],
col.names = FALSE)
print(dim(raw_data))
# library_sheet <- ifelse(metadata$LibrarySheet[1] == "LibraryKey",
#                         "LibraryKey",
#                         "LibraryKey2016")
# save it for later -- might eventually wrap for loops in a subroutine then call lapply() on list
HTS_data[[file]] <- raw_data
# lib_sheets[[file]] <- library_sheet
# plate info
# plates_master <- rep(1:21, each = 16)
# plates_unique <- unique(plates_master)
# normalize to DMSO on plate 1/2/3 depending on library drug dose
# calculate viabilities
}
length(unique(metadata$Filename))
for (file in seq(unique(metadata$Filename))) {
# load raw HTS data
raw_data <- readData(parent.dir = "./data/rawdata/",
file.name = metadata$Filename[file],
col.names = FALSE)
print(dim(raw_data))
# library_sheet <- ifelse(metadata$LibrarySheet[1] == "LibraryKey",
#                         "LibraryKey",
#                         "LibraryKey2016")
# save it for later -- might eventually wrap for loops in a subroutine then call lapply() on list
HTS_data[[file]] <- raw_data
# lib_sheets[[file]] <- library_sheet
# plate info
# plates_master <- rep(1:21, each = 16)
# plates_unique <- unique(plates_master)
# normalize to DMSO on plate 1/2/3 depending on library drug dose
# calculate viabilities
}
# load raw plate data into list
HTS_data <- list()
lib_sheets <- list()
for (file in seq(unique(metadata$Filename))) {
# load raw HTS data
raw_data <- readData(parent.dir = "./data/rawdata/",
file.name = metadata$Filename[file],
col.names = FALSE)
library_sheet <- ifelse(metadata$LibrarySheet[1] == "LibraryKey",
"LibraryKey",
"LibraryKey2016")
# save it for later -- might eventually wrap for loops in a subroutine then call lapply() on list
HTS_data[[file]] <- raw_data
lib_sheets[[file]] <- library_sheet
# plate info
plates_master <- rep(1:21, each = 16)
plates_unique <- unique(plates_master)
# normalize to DMSO on plate 1/2/3 depending on library drug dose
# calculate viabilities
}
# load raw plate data into list
HTS_data <- list()
lib_sheets <- list()
file=1
# load raw HTS data
raw_data <- readData(parent.dir = "./data/rawdata/",
file.name = metadata$Filename[file],
col.names = FALSE)
# plate info
raw_data$Plate_ID <- rep(NA, nrow(raw_data))
raw_data$Plate_ID <- rep(1:21, each = 16)
head(raw_data$Plate_ID, 17)
library_sheet <- ifelse(metadata$LibrarySheet[1] == "LibraryKey",
"LibraryKey",
"LibraryKey2016")
View(raw_data)
View(raw_data)
# add raw plate data to library_key
library_key$result <- rep(NA, nrow(library_key))
